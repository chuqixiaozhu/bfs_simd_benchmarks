Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -Wall -Wextra -g -std=c++11 -qopenmp -O3 -xMIC-AVX512 -qopt-report=5 -qopt-report-phase=vec -o page_rank

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at page_rank.cpp(81,2) inlined into page_rank.cpp(417,2)
   remark #15527: loop was not vectorized: function call to fscanf(FILE *, const char *, ...) cannot be vectorized   [ page_rank.cpp(82,3) ]
LOOP END

LOOP BEGIN at page_rank.cpp(87,2) inlined into page_rank.cpp(417,2)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(89,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(89,31) ]
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(91,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(91,23) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.475
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(87,2) inlined into page_rank.cpp(417,2)
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(89,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(91,23) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <offsets[i+1]>, masked, part of index is linear but may overflow   [ page_rank.cpp(89,14) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.415
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 18 
   remark #15477: vector cost: 2.560 
   remark #15478: estimated potential speedup: 6.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at page_rank.cpp(87,2) inlined into page_rank.cpp(417,2)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(89,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(89,31) ]
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(91,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(91,23) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.475
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(102,2) inlined into page_rank.cpp(417,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at page_rank.cpp(169,2) inlined into page_rank.cpp(417,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at page_rank.cpp(356,2) inlined into page_rank.cpp(417,2)
      remark #15523: loop was not vectorized: loop control variable row_index was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(132,2) inlined into page_rank.cpp(417,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ page_rank.cpp(135,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (135:3) and n2 (137:3)
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (137:3) and n2 (135:3)
LOOP END

LOOP BEGIN at page_rank.cpp(171,1) inlined into page_rank.cpp(417,2)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference rank has unaligned access   [ page_rank.cpp(173,4) ]
   remark #15389: vectorization support: reference sum has unaligned access   [ page_rank.cpp(174,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.947
LOOP END

LOOP BEGIN at page_rank.cpp(171,1) inlined into page_rank.cpp(417,2)
   remark #15389: vectorization support: reference rank has unaligned access   [ page_rank.cpp(173,4) ]
   remark #15389: vectorization support: reference sum has unaligned access   [ page_rank.cpp(174,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 32
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 11.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at page_rank.cpp(171,1) inlined into page_rank.cpp(417,2)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference rank has unaligned access   [ page_rank.cpp(173,4) ]
   remark #15389: vectorization support: reference sum has unaligned access   [ page_rank.cpp(174,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.059
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(310,23) inlined into page_rank.cpp(417,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at page_rank.cpp(270,2) inlined into page_rank.cpp(417,2)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at page_rank.cpp(271,3) inlined into page_rank.cpp(417,2)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at page_rank.cpp(283,4) inlined into page_rank.cpp(417,2)
            remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at page_rank.cpp(302,6) inlined into page_rank.cpp(417,2)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(417,2)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: PEEL LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(417,2)
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15416: vectorization support: irregularly indexed store was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <rank>, part of index is read from memory   [ page_rank.cpp(252,14) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <nneibor>, part of index is read from memory   [ page_rank.cpp(252,23) ]
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.053
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15462: unmasked indexed (or gather) loads: 3 
            remark #15463: unmasked indexed (or scatter) stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 49 
            remark #15477: vector cost: 15.180 
            remark #15478: estimated potential speedup: 2.870 
            remark #15486: divides: 1 
            remark #15487: type converts: 1 
            remark #15488: --- end vector cost summary ---
            remark #15499: histogram: 2 

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(417,2)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: REMAINDER LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(310,23) inlined into page_rank.cpp(417,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at page_rank.cpp(270,2) inlined into page_rank.cpp(417,2)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at page_rank.cpp(271,3) inlined into page_rank.cpp(417,2)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at page_rank.cpp(283,4) inlined into page_rank.cpp(417,2)
            remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at page_rank.cpp(302,6) inlined into page_rank.cpp(417,2)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(417,2)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: PEEL LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(417,2)
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15416: vectorization support: irregularly indexed store was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <rank>, part of index is read from memory   [ page_rank.cpp(252,14) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <nneibor>, part of index is read from memory   [ page_rank.cpp(252,23) ]
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.053
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15462: unmasked indexed (or gather) loads: 3 
            remark #15463: unmasked indexed (or scatter) stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 49 
            remark #15477: vector cost: 15.180 
            remark #15478: estimated potential speedup: 2.870 
            remark #15486: divides: 1 
            remark #15487: type converts: 1 
            remark #15488: --- end vector cost summary ---
            remark #15499: histogram: 2 

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(417,2)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: REMAINDER LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(390,2) inlined into page_rank.cpp(417,2)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference *sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.513
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(390,2) inlined into page_rank.cpp(417,2)
   remark #15389: vectorization support: reference *rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference *sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.882
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 1.060 
   remark #15478: estimated potential speedup: 30.640 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at page_rank.cpp(390,2) inlined into page_rank.cpp(417,2)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference *sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.513
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: input(char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at page_rank.cpp(81,2)
   remark #15527: loop was not vectorized: function call to fscanf(FILE *, const char *, ...) cannot be vectorized   [ page_rank.cpp(82,3) ]
LOOP END

LOOP BEGIN at page_rank.cpp(87,2)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(89,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(89,31) ]
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(91,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(91,23) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.475
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(87,2)
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(89,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(91,23) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15415: vectorization support: irregularly indexed load was generated for the variable <offsets[i+1]>, masked, part of index is linear but may overflow   [ page_rank.cpp(89,14) ]
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.415
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 18 
   remark #15477: vector cost: 2.560 
   remark #15478: estimated potential speedup: 6.150 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at page_rank.cpp(87,2)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(89,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(89,31) ]
   remark #15389: vectorization support: reference tops[i] has unaligned access   [ page_rank.cpp(91,4) ]
   remark #15389: vectorization support: reference offsets[i] has unaligned access   [ page_rank.cpp(91,23) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.475
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(102,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at page_rank.cpp(169,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at page_rank.cpp(356,2) inlined into page_rank.cpp(179,3)
      remark #15523: loop was not vectorized: loop control variable row_index was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(132,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ page_rank.cpp(135,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (135:3) and n2 (137:3)
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (137:3) and n2 (135:3)
LOOP END

LOOP BEGIN at page_rank.cpp(171,1)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference rank has unaligned access   [ page_rank.cpp(173,4) ]
   remark #15389: vectorization support: reference sum has unaligned access   [ page_rank.cpp(174,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: peel loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.947
LOOP END

LOOP BEGIN at page_rank.cpp(171,1)
   remark #15389: vectorization support: reference rank has unaligned access   [ page_rank.cpp(173,4) ]
   remark #15389: vectorization support: reference sum has unaligned access   [ page_rank.cpp(174,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 32
   remark #15309: vectorization support: normalized vectorization overhead 0.929
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 0.430 
   remark #15478: estimated potential speedup: 11.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at page_rank.cpp(171,1)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference rank has unaligned access   [ page_rank.cpp(173,4) ]
   remark #15389: vectorization support: reference sum has unaligned access   [ page_rank.cpp(174,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 1.059
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(310,23) inlined into page_rank.cpp(179,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at page_rank.cpp(270,2) inlined into page_rank.cpp(179,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at page_rank.cpp(271,3) inlined into page_rank.cpp(179,3)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at page_rank.cpp(283,4) inlined into page_rank.cpp(179,3)
            remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at page_rank.cpp(302,6) inlined into page_rank.cpp(179,3)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(179,3)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: PEEL LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(179,3)
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15416: vectorization support: irregularly indexed store was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <rank>, part of index is read from memory   [ page_rank.cpp(252,14) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <nneibor>, part of index is read from memory   [ page_rank.cpp(252,23) ]
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.053
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15462: unmasked indexed (or gather) loads: 3 
            remark #15463: unmasked indexed (or scatter) stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 49 
            remark #15477: vector cost: 15.180 
            remark #15478: estimated potential speedup: 2.870 
            remark #15486: divides: 1 
            remark #15487: type converts: 1 
            remark #15488: --- end vector cost summary ---
            remark #15499: histogram: 2 

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(179,3)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: REMAINDER LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(310,23) inlined into page_rank.cpp(179,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at page_rank.cpp(270,2) inlined into page_rank.cpp(179,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at page_rank.cpp(271,3) inlined into page_rank.cpp(179,3)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at page_rank.cpp(283,4) inlined into page_rank.cpp(179,3)
            remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at page_rank.cpp(302,6) inlined into page_rank.cpp(179,3)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(179,3)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: PEEL LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(179,3)
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15416: vectorization support: irregularly indexed store was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <sum>, part of index is read from memory   [ page_rank.cpp(252,3) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <rank>, part of index is read from memory   [ page_rank.cpp(252,14) ]
            remark #15415: vectorization support: irregularly indexed load was generated for the variable <nneibor>, part of index is read from memory   [ page_rank.cpp(252,23) ]
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.053
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15462: unmasked indexed (or gather) loads: 3 
            remark #15463: unmasked indexed (or scatter) stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 49 
            remark #15477: vector cost: 15.180 
            remark #15478: estimated potential speedup: 2.870 
            remark #15486: divides: 1 
            remark #15487: type converts: 1 
            remark #15488: --- end vector cost summary ---
            remark #15499: histogram: 2 

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(179,3)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n2s has unaligned access   [ page_rank.cpp(250,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15389: vectorization support: reference n1s has unaligned access   [ page_rank.cpp(249,17) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 0.092
            remark #15301: REMAINDER LOOP WAS VECTORIZED

            LOOP BEGIN at <compiler generated>
               remark #15548: loop was vectorized along with the outer loop
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(390,2) inlined into page_rank.cpp(179,3)
<Peeled loop for vectorization>
   remark #15389: vectorization support: reference *rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference *sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.513
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(390,2) inlined into page_rank.cpp(179,3)
   remark #15389: vectorization support: reference *rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference *sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.882
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 1.060 
   remark #15478: estimated potential speedup: 30.640 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at page_rank.cpp(390,2) inlined into page_rank.cpp(179,3)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference *rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference *sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.513
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END
===========================================================================

Begin optimization report for: page_rank(unsigned int *, unsigned int *, unsigned int *, unsigned int *, float *, float *, unsigned int *, unsigned int, unsigned int, unsigned int *, unsigned int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at page_rank.cpp(356,2)
   remark #15523: loop was not vectorized: loop control variable row_index was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at page_rank.cpp(310,23) inlined into page_rank.cpp(357,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at page_rank.cpp(270,2) inlined into page_rank.cpp(357,3)
      remark #15382: vectorization support: call to function _mm512_i32extscatter_ps(void *, __m512i, __m512, unsigned int, int, int) cannot be vectorized   [ page_rank.cpp(312,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between tiles_n1 (288:20) and sum (252:3)
      remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and tiles_n1 (288:20)

      LOOP BEGIN at page_rank.cpp(271,3) inlined into page_rank.cpp(357,3)
         remark #15382: vectorization support: call to function _mm512_i32extscatter_ps(void *, __m512i, __m512, unsigned int, int, int) cannot be vectorized   [ page_rank.cpp(312,5) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between tiles_n1 (288:20) and sum (252:3)
         remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and tiles_n1 (288:20)

         LOOP BEGIN at page_rank.cpp(283,4) inlined into page_rank.cpp(357,3)
            remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at page_rank.cpp(302,6) inlined into page_rank.cpp(357,3)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(357,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and rank (252:3)
            remark #15346: vector dependence: assumed ANTI dependence between rank (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed ANTI dependence between sum (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed ANTI dependence between sum (252:3) and sum (252:3)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(310,23) inlined into page_rank.cpp(372,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at page_rank.cpp(270,2) inlined into page_rank.cpp(372,3)
      remark #15382: vectorization support: call to function _mm512_i32extscatter_ps(void *, __m512i, __m512, unsigned int, int, int) cannot be vectorized   [ page_rank.cpp(312,5) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between tiles_n1 (288:20) and sum (252:3)
      remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and tiles_n1 (288:20)

      LOOP BEGIN at page_rank.cpp(271,3) inlined into page_rank.cpp(372,3)
         remark #15382: vectorization support: call to function _mm512_i32extscatter_ps(void *, __m512i, __m512, unsigned int, int, int) cannot be vectorized   [ page_rank.cpp(312,5) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between tiles_n1 (288:20) and sum (252:3)
         remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and tiles_n1 (288:20)

         LOOP BEGIN at page_rank.cpp(283,4) inlined into page_rank.cpp(372,3)
            remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at page_rank.cpp(302,6) inlined into page_rank.cpp(372,3)
               remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
            LOOP END
         LOOP END

         LOOP BEGIN at page_rank.cpp(248,2) inlined into page_rank.cpp(372,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and rank (252:3)
            remark #15346: vector dependence: assumed ANTI dependence between rank (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed ANTI dependence between sum (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed FLOW dependence between sum (252:3) and sum (252:3)
            remark #15346: vector dependence: assumed ANTI dependence between sum (252:3) and sum (252:3)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at page_rank.cpp(390,2)
<Peeled loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.513
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15301: PEEL LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(390,2)
<Multiversioned v1>
   remark #15389: vectorization support: reference rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.882
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 38 
   remark #15477: vector cost: 1.060 
   remark #15478: estimated potential speedup: 30.640 
   remark #15487: type converts: 2 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at page_rank.cpp(390,2)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15389: vectorization support: reference rank[j] has unaligned access   [ page_rank.cpp(391,3) ]
   remark #15389: vectorization support: reference sum[j] has unaligned access   [ page_rank.cpp(391,42) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15309: vectorization support: normalized vectorization overhead 0.513
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ page_rank.cpp(391,3) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ page_rank.cpp(391,3) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at page_rank.cpp(390,2)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at page_rank.cpp(390,2)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: print(float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at page_rank.cpp(398,2)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ page_rank.cpp(400,3) ]
LOOP END
===========================================================================
