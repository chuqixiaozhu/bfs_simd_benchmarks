Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.0.098 Build 20160721

Compiler options: -Wall -Wextra -g -std=c++11 -qopenmp -O3 -qopt-report=5 -qopt-report-phase=vec -o kcore

Begin optimization report for: input(char *, unsigned int *&, unsigned int *&, unsigned int *&, unsigned int *&, int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(70,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at kcore.cpp(85,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at kcore.cpp(94,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at kcore.cpp(126,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ kcore.cpp(129,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (129:3) and n2 (131:3)
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (131:3) and n2 (129:3)
LOOP END
===========================================================================

Begin optimization report for: convert_to_col_major(char *, unsigned int *, unsigned int *, unsigned int *, unsigned int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(181,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at kcore.cpp(182,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at kcore.cpp(183,4)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at kcore.cpp(192,5)
         <Peeled loop for vectorization>
         LOOP END

         LOOP BEGIN at kcore.cpp(192,5)
            remark #15388: vectorization support: reference new_heads[edge_index] has aligned access   [ kcore.cpp(193,6) ]
            remark #15389: vectorization support: reference graph_heads[edge_i] has unaligned access   [ kcore.cpp(193,30) ]
            remark #15388: vectorization support: reference new_ends[edge_index] has aligned access   [ kcore.cpp(194,6) ]
            remark #15389: vectorization support: reference graph_ends[edge_i] has unaligned access   [ kcore.cpp(194,29) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 4
            remark #15309: vectorization support: normalized vectorization overhead 1.533
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15449: unmasked aligned unit stride stores: 2 
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 12 
            remark #15477: vector cost: 3.750 
            remark #15478: estimated potential speedup: 3.040 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at kcore.cpp(192,5)
         <Alternate Alignment Vectorized Loop>
         LOOP END

         LOOP BEGIN at kcore.cpp(192,5)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at kcore.cpp(201,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at kcore.cpp(202,4)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at kcore.cpp(211,5)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at kcore.cpp(211,5)
         remark #15388: vectorization support: reference new_heads[edge_index] has aligned access   [ kcore.cpp(212,6) ]
         remark #15389: vectorization support: reference graph_heads[edge_i] has unaligned access   [ kcore.cpp(212,30) ]
         remark #15388: vectorization support: reference new_ends[edge_index] has aligned access   [ kcore.cpp(213,6) ]
         remark #15389: vectorization support: reference graph_ends[edge_i] has unaligned access   [ kcore.cpp(213,29) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 1.533
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 2 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 12 
         remark #15477: vector cost: 3.750 
         remark #15478: estimated potential speedup: 3.040 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at kcore.cpp(211,5)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at kcore.cpp(211,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at kcore.cpp(249,2)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ kcore.cpp(250,3) ]
LOOP END

LOOP BEGIN at kcore.cpp(255,2)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ kcore.cpp(256,3) ]
LOOP END

LOOP BEGIN at kcore.cpp(240,2)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ kcore.cpp(241,3) ]
LOOP END
===========================================================================

Begin optimization report for: input_serial(char *, unsigned int *&, unsigned int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(151,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================
