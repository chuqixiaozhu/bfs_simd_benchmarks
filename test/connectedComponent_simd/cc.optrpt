Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -Wall -Wextra -g -std=c++14 -qopenmp -O3 -xMIC-AVX512 -qopt-report=5 -qopt-report-phase=vec -inline-level=2 -inline-forceinline -o cc

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at cc.cpp(537,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at cc.cpp(538,2)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at cc.cpp(539,3)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at cc.cpp(541,3)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference graph_active[k] has unaligned access   [ cc.cpp(542,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.364
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at cc.cpp(541,3)
            remark #15389: vectorization support: reference graph_active[k] has unaligned access   [ cc.cpp(542,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 3.333
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.180 
            remark #15478: estimated potential speedup: 12.320 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at cc.cpp(541,3)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference graph_active[k] has unaligned access   [ cc.cpp(542,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.364
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at cc.cpp(545,3)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference is_active_side[k] has unaligned access   [ cc.cpp(546,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.364
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at cc.cpp(545,3)
            remark #15389: vectorization support: reference is_active_side[k] has unaligned access   [ cc.cpp(546,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 3.333
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.180 
            remark #15478: estimated potential speedup: 12.320 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at cc.cpp(545,3)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference is_active_side[k] has unaligned access   [ cc.cpp(546,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.364
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at cc.cpp(549,3)
         <Peeled loop for vectorization>
            remark #15389: vectorization support: reference graph_component[k] has unaligned access   [ cc.cpp(550,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.455
            remark #15301: PEEL LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at cc.cpp(549,3)
            remark #15389: vectorization support: reference graph_component[k] has unaligned access   [ cc.cpp(550,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 3.667
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 3 
            remark #15477: vector cost: 0.180 
            remark #15478: estimated potential speedup: 12.160 
            remark #15488: --- end vector cost summary ---
         LOOP END

         LOOP BEGIN at cc.cpp(549,3)
         <Remainder loop for vectorization>
            remark #15389: vectorization support: reference graph_component[k] has unaligned access   [ cc.cpp(550,4) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 16
            remark #15309: vectorization support: normalized vectorization overhead 1.455
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: cc(unsigned int *, unsigned int *, unsigned int *, int *, int *, int *, int *, int *, unsigned int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at cc.cpp(390,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at cc.cpp(393,3)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at cc.cpp(312,46) inlined into cc.cpp(398,4)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at cc.cpp(288,2) inlined into cc.cpp(398,4)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at cc.cpp(294,3) inlined into cc.cpp(398,4)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at cc.cpp(307,4) inlined into cc.cpp(398,4)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

            LOOP BEGIN at cc.cpp(210,2) inlined into cc.cpp(398,4)
               remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at cc.cpp(210,2) inlined into cc.cpp(398,4)
         remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at cc.cpp(312,46) inlined into cc.cpp(414,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at cc.cpp(288,2) inlined into cc.cpp(414,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at cc.cpp(294,3) inlined into cc.cpp(414,3)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at cc.cpp(307,4) inlined into cc.cpp(414,3)
            remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

            LOOP BEGIN at cc.cpp(210,2) inlined into cc.cpp(414,3)
               remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at cc.cpp(210,2) inlined into cc.cpp(414,3)
         remark #15523: loop was not vectorized: loop control variable edge_i was found, but loop iteration count cannot be computed before executing the loop
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at cc.cpp(429,3)
   remark #15382: vectorization support: call to function _mm512_mask_storeu_epi32(void *, unsigned short, __m512i) cannot be vectorized   [ cc.cpp(460,5) ]
   remark #15382: vectorization support: call to function _mm512_mask_storeu_epi32(void *, unsigned short, __m512i) cannot be vectorized   [ cc.cpp(475,4) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between is_active_side[side_id] (431:5) and graph_active[vertex_id] (476:4)
   remark #15346: vector dependence: assumed OUTPUT dependence between graph_active[vertex_id] (476:4) and is_active_side[side_id] (431:5)

   LOOP BEGIN at cc.cpp(452,4)
      remark #15523: loop was not vectorized: loop control variable vertex_id was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: input(char *, unsigned int *&, unsigned int *&, unsigned int *&, int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at cc.cpp(72,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at cc.cpp(83,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at cc.cpp(115,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ cc.cpp(118,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (118:3) and n2 (120:3)
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (120:3) and n2 (118:3)
LOOP END
===========================================================================

Begin optimization report for: input_serial(char *, unsigned int *&, unsigned int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at cc.cpp(140,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: print(unsigned int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at cc.cpp(156,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into cc.cpp(159,19)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into cc.cpp(160,18)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into cc.cpp(161,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into cc.cpp(161,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into cc.cpp(161,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into cc.cpp(161,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1140,7) inlined into cc.cpp(163,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into cc.cpp(163,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into cc.cpp(163,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1321,7) inlined into cc.cpp(163,10)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at cc.cpp(169,36)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into cc.cpp(176,2)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into cc.cpp(155,26)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into cc.cpp(155,26)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::_Rb_tree<std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::key_type, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::value_type, std::_Select1st<std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::value_type>, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::key_compare, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::_Pair_alloc_type>::_M_erase(std::_Rb_tree<std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::key_type, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::value_type, std::_Select1st<std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::value_type>, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::key_compare, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::_Pair_alloc_type> *, std::_Rb_tree<std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::key_type, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::value_type, std::_Select1st<std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::value_type>, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::key_compare, std::map<unsigned int, unsigned int, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>::_Pair_alloc_type>::_Link_type)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at /usr/include/c++/4.8.5/bits/stl_tree.h(1123,7) inlined into /usr/include/c++/4.8.5/bits/stl_tree.h(1126,4)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================
