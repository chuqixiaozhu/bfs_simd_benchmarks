Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -Wall -Wextra -g -std=c++11 -qopenmp -O3 -qopt-report=5 -qopt-report-phase=vec -o kcore

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(239,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at kcore.cpp(244,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at kcore.cpp(244,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at kcore.cpp(244,3)
         remark #15388: vectorization support: reference graph_cores[k] has aligned access   [ kcore.cpp(245,4) ]
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 3.333
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.750 
         remark #15478: estimated potential speedup: 1.940 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at kcore.cpp(244,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at kcore.cpp(171,2) inlined into kcore.cpp(250,3)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at kcore.cpp(136,1) inlined into kcore.cpp(250,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between graph_degrees (142:5) and KCORE (143:5)
   remark #15346: vector dependence: assumed ANTI dependence between KCORE (143:5) and graph_degrees (142:5)
LOOP END

LOOP BEGIN at kcore.cpp(136,1) inlined into kcore.cpp(250,3)
<Remainder>
LOOP END

LOOP BEGIN at kcore.cpp(148,1) inlined into kcore.cpp(250,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between graph_heads (150:19) and graph_degrees (156:4)
   remark #15346: vector dependence: assumed FLOW dependence between graph_degrees (156:4) and graph_heads (150:19)
LOOP END

LOOP BEGIN at kcore.cpp(148,1) inlined into kcore.cpp(250,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: input(char *, unsigned int *&, unsigned int *&, unsigned int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(70,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ kcore.cpp(73,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *, const char *, ...) (73:3) and *(graph_degrees+n2*4) (79:3)
   remark #15346: vector dependence: assumed OUTPUT dependence between *(graph_degrees+n2*4) (79:3) and call:fscanf(FILE *, const char *, ...) (73:3)
LOOP END
===========================================================================

Begin optimization report for: input_serial(char *, unsigned int *&, unsigned int *&, unsigned int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(98,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: print(unsigned int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(115,2)
   remark #15382: vectorization support: call to function fprintf(FILE *, const char *, ...) cannot be vectorized   [ kcore.cpp(116,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between kc (117:3) and kc (117:3)
   remark #15346: vector dependence: assumed FLOW dependence between kc (117:3) and kc (117:3)
LOOP END
===========================================================================

Begin optimization report for: kcore_kernel(unsigned int *, unsigned int *, unsigned int *, int *, const unsigned int &, const unsigned int &, const unsigned int &, const unsigned int &, unsigned int *, int &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(136,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between graph_updating_active[i] (141:5) and graph_cores[i] (143:5)
   remark #15346: vector dependence: assumed OUTPUT dependence between graph_cores[i] (143:5) and graph_updating_active[i] (141:5)
LOOP END

LOOP BEGIN at kcore.cpp(136,1)
<Remainder>
LOOP END

LOOP BEGIN at kcore.cpp(148,1)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between graph_heads[edge_i] (150:19) and graph_degrees[head] (156:4)
   remark #15346: vector dependence: assumed FLOW dependence between graph_degrees[head] (156:4) and graph_heads[edge_i] (150:19)
LOOP END

LOOP BEGIN at kcore.cpp(148,1)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: kcore(unsigned int *, unsigned int *, unsigned int *, int *, unsigned int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at kcore.cpp(171,2)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at kcore.cpp(136,1) inlined into kcore.cpp(173,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between graph_updating_active (141:5) and graph_cores (143:5)
   remark #15346: vector dependence: assumed OUTPUT dependence between graph_cores (143:5) and graph_updating_active (141:5)
LOOP END

LOOP BEGIN at kcore.cpp(136,1) inlined into kcore.cpp(173,3)
<Remainder>
LOOP END

LOOP BEGIN at kcore.cpp(148,1) inlined into kcore.cpp(173,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between graph_heads (150:19) and graph_degrees (156:4)
   remark #15346: vector dependence: assumed FLOW dependence between graph_degrees (156:4) and graph_heads (150:19)
LOOP END

LOOP BEGIN at kcore.cpp(148,1) inlined into kcore.cpp(173,3)
<Remainder>
LOOP END
===========================================================================
