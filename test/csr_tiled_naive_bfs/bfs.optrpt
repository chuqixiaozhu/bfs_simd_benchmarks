Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -Wall -Wextra -g -std=c++11 -qopenmp -O3 -qopt-report=5 -qopt-report-phase=vec -o bfs

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at bfs.cpp(142,2) inlined into bfs.cpp(97,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at bfs.cpp(153,2) inlined into bfs.cpp(97,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at bfs.cpp(294,2) inlined into bfs.cpp(97,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at bfs.cpp(305,3) inlined into bfs.cpp(97,2)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at bfs.cpp(305,3) inlined into bfs.cpp(97,2)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at bfs.cpp(305,3) inlined into bfs.cpp(97,2)
         remark #15388: vectorization support: reference h_cost[i] has aligned access   [ bfs.cpp(306,4) ]
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 3.333
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.750 
         remark #15478: estimated potential speedup: 1.940 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at bfs.cpp(305,3) inlined into bfs.cpp(97,2)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bfs.cpp(207,2) inlined into bfs.cpp(97,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ bfs.cpp(211,3) ]
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ bfs.cpp(227,4) ]
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ bfs.cpp(245,4) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *, const char *, ...) (211:3) and call:fscanf(FILE *, const char *, ...) (245:4)
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *, const char *, ...) (245:4) and call:fscanf(FILE *, const char *, ...) (211:3)

   LOOP BEGIN at bfs.cpp(222,3) inlined into bfs.cpp(97,2)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at bfs.cpp(242,3) inlined into bfs.cpp(97,2)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: BFSGraph(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at bfs.cpp(142,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at bfs.cpp(153,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at bfs.cpp(294,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at bfs.cpp(305,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at bfs.cpp(305,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at bfs.cpp(305,3)
         remark #15388: vectorization support: reference h_cost[i] has aligned access   [ bfs.cpp(306,4) ]
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 3.333
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.750 
         remark #15478: estimated potential speedup: 1.940 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at bfs.cpp(305,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bfs.cpp(207,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ bfs.cpp(211,3) ]
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ bfs.cpp(227,4) ]
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ bfs.cpp(245,4) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *, const char *, ...) (211:3) and call:fscanf(FILE *, const char *, ...) (245:4)
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fscanf(FILE *, const char *, ...) (245:4) and call:fscanf(FILE *, const char *, ...) (211:3)

   LOOP BEGIN at bfs.cpp(222,3)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END

   LOOP BEGIN at bfs.cpp(242,3)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: BFS_kernel(int *, Tile *, int *, int *, int *, int *, unsigned int, int, int *, int *, int *, unsigned int, unsigned int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at bfs.cpp(446,2)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at bfs.cpp(471,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between is_active_side[side_id] (475:4) and TILE_WIDTH (518:8)
   remark #15346: vector dependence: assumed ANTI dependence between TILE_WIDTH (518:8) and is_active_side[side_id] (475:4)

   LOOP BEGIN at bfs.cpp(478,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between h_graph_tiles->vertices_offset[tile_id] (485:56) and is_updating_active_side[end/TILE_WIDTH] (518:8)
      remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side[end/TILE_WIDTH] (518:8) and h_graph_tiles->vertices_offset[tile_id] (485:56)

      LOOP BEGIN at bfs.cpp(486,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between h_graph_data[head_i] (489:22) and is_updating_active_side[end/TILE_WIDTH] (518:8)
         remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side[end/TILE_WIDTH] (518:8) and h_graph_data[head_i] (489:22)

         LOOP BEGIN at bfs.cpp(510,6)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between h_graph_data[end_i] (514:22) and is_updating_active_side[end/TILE_WIDTH] (518:8)
            remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side[end/TILE_WIDTH] (518:8) and h_graph_data[end_i] (514:22)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at bfs.cpp(566,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side[side_id] (570:4) and TILE_WIDTH (573:4)
   remark #15346: vector dependence: assumed ANTI dependence between TILE_WIDTH (573:4) and is_updating_active_side[side_id] (570:4)

   LOOP BEGIN at bfs.cpp(573,4)
      remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END
===========================================================================
