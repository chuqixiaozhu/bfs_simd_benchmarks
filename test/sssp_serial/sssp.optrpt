Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -Wall -Wextra -g -std=c++11 -qopenmp -O3 -xMIC-AVX512 -qopt-report=5 -qopt-report-phase=vec -inline-level=2 -inline-forceinline -o sssp

Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at sssp.cpp(339,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at sssp.cpp(228,2) inlined into sssp.cpp(351,3)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at sssp.cpp(231,3) inlined into sssp.cpp(351,3)
         remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at sssp.cpp(196,20) inlined into sssp.cpp(351,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at sssp.cpp(187,2) inlined into sssp.cpp(351,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between dists (165:3) and dists (166:4)
      remark #15346: vector dependence: assumed FLOW dependence between dists (166:4) and dists (165:3)

      LOOP BEGIN at sssp.cpp(188,3) inlined into sssp.cpp(351,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between dists (165:3) and dists (166:4)
         remark #15346: vector dependence: assumed FLOW dependence between dists (166:4) and dists (165:3)

         LOOP BEGIN at sssp.cpp(159,2) inlined into sssp.cpp(351,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between dists (165:3) and dists (166:4)
            remark #15346: vector dependence: assumed FLOW dependence between dists (166:4) and dists (165:3)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at sssp.cpp(196,20) inlined into sssp.cpp(351,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at sssp.cpp(187,2) inlined into sssp.cpp(351,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between dists (165:3) and dists (166:4)
      remark #15346: vector dependence: assumed FLOW dependence between dists (166:4) and dists (165:3)

      LOOP BEGIN at sssp.cpp(188,3) inlined into sssp.cpp(351,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between dists (165:3) and dists (166:4)
         remark #15346: vector dependence: assumed FLOW dependence between dists (166:4) and dists (165:3)

         LOOP BEGIN at sssp.cpp(159,2) inlined into sssp.cpp(351,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between dists (165:3) and dists (166:4)
            remark #15346: vector dependence: assumed FLOW dependence between dists (166:4) and dists (165:3)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at sssp.cpp(263,3) inlined into sssp.cpp(351,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at sssp.cpp(277,4) inlined into sssp.cpp(351,3)
   <Peeled loop for vectorization>
      remark #15389: vectorization support: reference graph_updating_active has unaligned access   [ sssp.cpp(279,6) ]
      remark #15389: vectorization support: reference graph_active has unaligned access   [ sssp.cpp(280,6) ]
      remark #15389: vectorization support: reference graph_active has unaligned access   [ sssp.cpp(282,6) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.324
      remark #15301: PEEL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at sssp.cpp(277,4) inlined into sssp.cpp(351,3)
      remark #15389: vectorization support: reference graph_updating_active has unaligned access   [ sssp.cpp(279,6) ]
      remark #15389: vectorization support: reference graph_active has unaligned access   [ sssp.cpp(280,6) ]
      remark #15389: vectorization support: reference graph_updating_active has unaligned access   [ sssp.cpp(279,6) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.765
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 14 
      remark #15477: vector cost: 1.060 
      remark #15478: estimated potential speedup: 11.350 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at sssp.cpp(277,4) inlined into sssp.cpp(351,3)
   <Remainder loop for vectorization>
      remark #15389: vectorization support: reference graph_updating_active has unaligned access   [ sssp.cpp(279,6) ]
      remark #15389: vectorization support: reference graph_active has unaligned access   [ sssp.cpp(280,6) ]
      remark #15389: vectorization support: reference graph_active has unaligned access   [ sssp.cpp(282,6) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 16
      remark #15309: vectorization support: normalized vectorization overhead 0.324
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: input(char *, unsigned int *&, unsigned int *&, unsigned int *&, int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at sssp.cpp(62,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at sssp.cpp(70,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at sssp.cpp(102,2)
   remark #15382: vectorization support: call to function fscanf(FILE *, const char *, ...) cannot be vectorized   [ sssp.cpp(105,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (105:3) and n2 (107:3)
   remark #15346: vector dependence: assumed OUTPUT dependence between n2 (107:3) and n2 (105:3)
LOOP END
===========================================================================

Begin optimization report for: input_serial(char *, unsigned int *&, unsigned int *&)

    Report from: Vector optimizations [vec]


LOOP BEGIN at sssp.cpp(128,2)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: print(int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at sssp.cpp(142,2)
   remark #15527: loop was not vectorized: function call to fprintf(FILE *, const char *, ...) cannot be vectorized   [ sssp.cpp(143,3) ]
LOOP END
===========================================================================

Begin optimization report for: sssp(unsigned int *, unsigned int *, unsigned int *, int *, int *, int *, int *, int *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at sssp.cpp(228,2)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at sssp.cpp(231,3)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at sssp.cpp(196,20) inlined into sssp.cpp(236,4)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at sssp.cpp(187,2) inlined into sssp.cpp(236,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between SIDE_LENGTH (189:46) and is_updating_active_side (168:4)
      remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side (168:4) and SIDE_LENGTH (189:46)

      LOOP BEGIN at sssp.cpp(188,3) inlined into sssp.cpp(236,4)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
         remark #15346: vector dependence: assumed ANTI dependence between SIDE_LENGTH (189:46) and is_updating_active_side (168:4)
         remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side (168:4) and SIDE_LENGTH (189:46)

         LOOP BEGIN at sssp.cpp(159,2) inlined into sssp.cpp(236,4)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between graph_heads (160:19) and is_updating_active_side (168:4)
            remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side (168:4) and graph_heads (160:19)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at sssp.cpp(196,20) inlined into sssp.cpp(250,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at sssp.cpp(187,2) inlined into sssp.cpp(250,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between SIDE_LENGTH (189:46) and is_updating_active_side (168:4)
      remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side (168:4) and SIDE_LENGTH (189:46)

      LOOP BEGIN at sssp.cpp(188,3) inlined into sssp.cpp(250,3)
         remark #15523: loop was not vectorized: loop control variable row_id was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at sssp.cpp(159,2) inlined into sssp.cpp(250,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed ANTI dependence between graph_heads (160:19) and is_updating_active_side (168:4)
            remark #15346: vector dependence: assumed FLOW dependence between is_updating_active_side (168:4) and graph_heads (160:19)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at sssp.cpp(263,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between is_active_side[side_id] (265:5) and graph_active[vertex_id] (282:6)
   remark #15346: vector dependence: assumed OUTPUT dependence between graph_active[vertex_id] (282:6) and is_active_side[side_id] (265:5)

   LOOP BEGIN at sssp.cpp(277,4)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed OUTPUT dependence between graph_updating_active[vertex_id] (279:6) and graph_active[vertex_id] (282:6)
      remark #15346: vector dependence: assumed OUTPUT dependence between graph_active[vertex_id] (282:6) and graph_updating_active[vertex_id] (279:6)
   LOOP END

   LOOP BEGIN at sssp.cpp(277,4)
   <Remainder>
   LOOP END
LOOP END
===========================================================================
